# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
      
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
    # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.8
    # The target architecture (x86, x64) of the Python interpreter.
          architecture: Python interpreter
    # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
          token: ${{ github.token }}
      - name: terraform-apply
  # You may pin to the exact commit or the version.
  # uses: dflook/terraform-apply@27cd16ab1a83b052d18d1619736a220ddc6ed3f0
        uses: dflook/terraform-apply@v1.4.1
        with:
    # Path to the terraform configuration
          path: /.../
    # Name of the terraform workspace
          workspace: subautterra
    # Comma separated list of backend configs to set, e.g. 'foo=bar'
          backend_config: /.../
    # Path to a backend config file
          backend_config_file: xyz=abc
          var: /.../
    # Comma separated list of var file paths
          var_file: xyz.txt
          parallelism: 0
      - name: Azure Resource Manager (ARM) Template Deployment
  # You may pin to the exact commit or the version.
  # uses: whiteducksoftware/azure-arm-action@93cecbb4200bb6171789ebd3566cda22ecd381f4
        uses: whiteducksoftware/azure-arm-action@v3.2
        with:
    # Paste output of `az ad sp create-for-rbac -o json` as value of secret variable: AZURE_CREDENTIALS
          creds: xyz
    # Provide the name of a resource group.
          resourceGroupName: eun-cpe-000-dev
    # Specify the path to the Azure Resource Manager template.
          templateLocation: /.../
    # Specifies the name of the resource group deployment to create.
          deploymentName: testarmtemplate 
    # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group).
          deploymentMode: Incremental
    # Specify either path to the Azure Resource Manager parameters file or pass them as 'key1=value1;key2=value2;...'.
          parameters: none
    # Specify either path to the Azure Resource Manager override parameters file or pass them as 'key1=value1;key2=value2;...'.
          overrideParameters: none
